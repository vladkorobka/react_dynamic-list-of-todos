{"version":3,"sources":["context.tsx","api.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoContext","React","createContext","todos","setTodos","_todos","loading","setLoading","_loading","showModal","setShowModal","_showModal","todo","setTodo","_todo","user","setUser","_user","status","setStatus","_status","searchField","setSearchField","_searchField","TodoProvider","children","useState","value","Provider","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoList","useContext","selectedTodo","setSelectedTodo","filterTodos","setFilterTodos","useEffect","userId","Object","keys","length","userItem","filteredTodos","filter","item","completed","title","toUpperCase","trim","includes","className","map","todoItem","id","classNames","type","onClick","handleSelectButtonClick","TodoFilter","onSubmit","e","preventDefault","onChange","event","target","placeholder","style","pointerEvents","Loader","TodoModal","name","email","href","App","isLoading","setIsLoading","ReactDOM","render","document","getElementById"],"mappings":"6PAKaA,EAAcC,IAAMC,cAAc,CAC7CC,MAAO,GAEPC,SAAU,SAACC,KACXC,SAAS,EAETC,WAAY,SAACC,KACbC,WAAW,EAEXC,aAAc,SAACC,KACfC,KAAM,GAENC,QAAS,SAACC,KACVC,KAAM,GAENC,QAAS,SAACC,KACVC,OAAQ,GAERC,UAAW,SAACC,KACZC,YAAa,GAEbC,eAAgB,SAACC,OAONC,EAAgC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC9C,EAA0BC,mBAAS,IAAnC,mBAAOvB,EAAP,KAAcC,EAAd,KACA,EAA8BsB,oBAAS,GAAvC,mBAAOpB,EAAP,KAAgBC,EAAhB,KACA,EAAkCmB,oBAAS,GAA3C,mBAAOjB,EAAP,KAAkBC,EAAlB,KACA,EAAwBgB,mBAAS,IAAjC,mBAAOd,EAAP,KAAaC,EAAb,KACA,EAAwBa,mBAAS,IAAjC,mBAAOX,EAAP,KAAaC,EAAb,KACA,EAA4BU,mBAAS,OAArC,mBAAOR,EAAP,KAAeC,EAAf,KACA,EAAsCO,mBAAS,IAA/C,mBAEMC,EAAQ,CACZxB,QACAC,WACAE,UACAC,aACAE,YACAC,eACAE,OACAC,UACAE,OACAC,UACAE,SACAC,YACAE,YAfF,KAgBEC,eAhBF,MAmBA,OACE,cAACtB,EAAY4B,SAAb,CAAsBD,MAAOA,EAA7B,SACGF,KC/CP,SAASI,EAAOC,GAEd,IARYC,EAQNC,EAZS,iEAYYF,EAAM,QAGjC,OAXYC,EAWA,IAVL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OAUnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,UAGd,ICZMC,EAAqB,WAChC,MASIC,qBAAWzC,GARbG,EADF,EACEA,MACAS,EAFF,EAEEA,KACAC,EAHF,EAGEA,QACAG,EAJF,EAIEA,QACAN,EALF,EAKEA,aACAH,EANF,EAMEA,WACAW,EAPF,EAOEA,OACAG,EARF,EAQEA,YAGF,EAAwCK,mBAAS,GAAjD,mBAAOgB,EAAP,KAAqBC,EAArB,KACA,EAAsCjB,mBAASvB,GAA/C,mBAAOyC,EAAP,KAAoBC,EAApB,KAEAC,qBAAU,WDDW,IAACC,ECEhBC,OAAOC,KAAKrC,GAAMsC,QDFFH,ECGNnC,EAAKmC,ODHoBlB,EAAG,iBAAiBkB,KCItDX,MAAK,SAACe,GACLnC,EAAQmC,GACR5C,GAAW,MAGfoC,EAAgB,KAEjB,CAAC/B,EAAMI,EAAST,IAEnBuC,qBAAU,WACR,IAAIM,EAAwB,GAE5B,OAAQlC,GACN,IAlCS,SAmCPkC,EAAgBjD,EAAMkD,QAAO,SAAAC,GAAI,OAAKA,EAAKC,aAC3C,MAEF,IArCY,YAsCVH,EAAgBjD,EAAMkD,QAAO,SAAAC,GAAI,OAAIA,EAAKC,aAC1C,MAGF,QACEH,EAAgBjD,EAIpB0C,EAAeO,EACZC,QAAO,SAAAC,GAAI,OAAIA,EAAKE,MAAMC,cAAcC,OACtCC,SAAStC,EAAYoC,cAAcC,cACvC,CAACxC,EAAQG,EAAalB,IASzB,OACE,wBAAOyD,UAAU,+BAAjB,UACE,gCACE,+BACE,mCACA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAGjB,uCACA,wCAIJ,gCACGhB,EAAYiB,KAAI,SAAAC,GACf,IACEC,EAGED,EAHFC,GACAP,EAEEM,EAFFN,MACAD,EACEO,EADFP,UAGF,OACE,qBAEE,UAAQ,OACRK,UAAWI,IAAW,CACpB,4BAA6BtB,IAAiBqB,IAJlD,UAOE,oBAAIH,UAAU,eAAd,SAA8BG,IAC9B,oBAAIH,UAAU,eAAd,SACGL,GACC,sBAAMK,UAAU,OAAO,UAAQ,gBAA/B,SACE,mBAAGA,UAAU,qBAInB,oBAAIA,UAAU,2BAAd,SACE,mBAAGA,UAAWI,IAAW,CACvB,mBAAoBT,EACpB,mBAAoBA,IAFtB,SAKGC,MAGL,oBAAII,UAAU,8BAAd,SACE,wBACE,UAAQ,eACRA,UAAU,SACVK,KAAK,SACLC,QAAS,kBA5DO,SAACJ,GAC/BnB,EAAgBmB,EAASC,IACzBrD,GAAa,GACbG,EAAQiD,GACRvD,GAAW,GAwDkB4D,CAAwBL,IAJzC,SAME,sBAAMF,UAAU,OAAhB,SACE,mBAAGA,UAAWI,IAAW,MACvB,CACE,SAAUtB,IAAiBqB,EAC3B,eAAgBrB,IAAiBqB,cAlCtCA,YC3FNK,EAAuB,WAClC,MAAmD3B,qBAAWzC,GAAtDmB,EAAR,EAAQA,UAAWE,EAAnB,EAAmBA,YAAaC,EAAhC,EAAgCA,eAgBhC,OACE,uBAAMsC,UAAU,mBAAmBS,SAAU,SAACC,GAAD,OAAOA,EAAEC,kBAAtD,UACE,mBAAGX,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBAAQ,UAAQ,eAAeY,SAlBZ,SAACC,GAC1BtD,EAAUsD,EAAMC,OAAO/C,QAiBjB,UACE,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,YAAd,8BAKN,oBAAGiC,UAAU,qDAAb,UACE,uBACE,UAAQ,cACRK,KAAK,OACLL,UAAU,QACVe,YAAY,YACZH,SA5BwB,SAC9BC,GAEAnD,EAAemD,EAAMC,OAAO/C,QA0BtBA,MAAON,IAET,sBAAMuC,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAGdvC,GACC,sBAAMuC,UAAU,gBAAgBgB,MAAO,CAAEC,cAAe,OAAxD,SAEE,wBACE,UAAQ,oBACRZ,KAAK,SACLL,UAAU,SACVM,QApCwB,WAClC5C,EAAe,gBCbNwD,G,MAAmB,WAG9B,OACE,qBAAKlB,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,wBCFRmB,EAAsB,WACjC,MAQItC,qBAAWzC,GAPbY,EADF,EACEA,KACAC,EAFF,EAEEA,QACAE,EAHF,EAGEA,KACAC,EAJF,EAIEA,QACAP,EALF,EAKEA,UACAC,EANF,EAMEA,aACAJ,EAPF,EAOEA,QAUAyD,EAGEnD,EAHFmD,GACAP,EAEE5C,EAFF4C,MACAD,EACE3C,EADF2C,UAGMyB,EAAgBjE,EAAhBiE,KAAMC,EAAUlE,EAAVkE,MAEd,OACE,mCACGxE,GACC,sBAAKmD,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBAEdtD,EACC,cAAC,EAAD,IAEA,sBAAKsD,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,qBACEA,UAAU,0CACV,UAAQ,eAFV,yBAIYG,KAIZ,wBACEE,KAAK,SACLL,UAAU,SACV,UAAQ,cACRM,QArCc,WAC5BxD,GAAa,GACbG,EAAQ,IACRG,EAAQ,UAsCE,sBAAK4C,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,SACGJ,IAGH,oBAAGI,UAAU,QAAQ,UAAQ,aAA7B,UAEIL,EACI,wBAAQK,UAAU,mBAAlB,kBACA,wBAAQA,UAAU,kBAAlB,qBAGL,OAED,mBAAGsB,KAAI,iBAAYD,GAAnB,SACGD,mBC9DRG,EAAgB,WAC3B,IAAQ/E,EAAaqC,qBAAWzC,GAAxBI,SACR,EAAkCsB,oBAAS,GAA3C,mBAAO0D,EAAP,KAAkBC,EAAlB,KAUA,OARAvC,qBAAU,WLQkBjB,EAAY,UKNnCO,MAAK,SAAA0B,GACJ1D,EAAS0D,GACTuB,GAAa,QAEhB,CAACjF,IAGF,qCACE,qBAAKwD,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,MAGF,qBAAKA,UAAU,QAAf,SAEIwB,EACI,cAAC,EAAD,IACA,cAAC,EAAD,aAOd,cAAC,EAAD,QCzCNE,IAASC,OACP,cAAC,EAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7c15ec5b.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nexport const TodoContext = React.createContext({\n  todos: [] as Todo[],\n  /* eslint-disable-next-line */\n  setTodos: (_todos: Todo[]) => {},\n  loading: false,\n  /* eslint-disable-next-line */\n  setLoading: (_loading: boolean) => {},\n  showModal: false,\n  /* eslint-disable-next-line */\n  setShowModal: (_showModal: boolean) => {},\n  todo: {} as Todo,\n  /* eslint-disable-next-line */\n  setTodo: (_todo: Todo) => {},\n  user: {} as User,\n  /* eslint-disable-next-line */\n  setUser: (_user: User) => {},\n  status: '',\n  /* eslint-disable-next-line */\n  setStatus: (_status: string) => {},\n  searchField: '',\n  /* eslint-disable-next-line */\n  setSearchField: (_searchField: string) => {},\n});\n\ntype Props = {\n  children: React.ReactNode\n};\n\nexport const TodoProvider: React.FC<Props> = ({ children }) => {\n  const [todos, setTodos] = useState([] as Todo[]);\n  const [loading, setLoading] = useState(true);\n  const [showModal, setShowModal] = useState(false);\n  const [todo, setTodo] = useState({} as Todo);\n  const [user, setUser] = useState({} as User);\n  const [status, setStatus] = useState('all');\n  const [searchField, setSearchField] = useState('');\n\n  const value = {\n    todos,\n    setTodos,\n    loading,\n    setLoading,\n    showModal,\n    setShowModal,\n    todo,\n    setTodo,\n    user,\n    setUser,\n    status,\n    setStatus,\n    searchField,\n    setSearchField,\n  };\n\n  return (\n    <TodoContext.Provider value={value}>\n      {children}\n    </TodoContext.Provider>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import classNames from 'classnames';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { TodoContext } from '../../context';\nimport * as API from '../../api';\n\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\nconst ALL = 'all';\nconst ACTIVE = 'active';\nconst COMPLETED = 'completed';\n\nexport const TodoList: React.FC = () => {\n  const {\n    todos,\n    todo,\n    setTodo,\n    setUser,\n    setShowModal,\n    setLoading,\n    status,\n    searchField,\n  } = useContext(TodoContext);\n\n  const [selectedTodo, setSelectedTodo] = useState(0);\n  const [filterTodos, setFilterTodos] = useState(todos);\n\n  useEffect(() => {\n    if (Object.keys(todo).length) {\n      API.getUser(todo.userId)\n        .then((userItem: User) => {\n          setUser(userItem);\n          setLoading(false);\n        });\n    } else {\n      setSelectedTodo(0);\n    }\n  }, [todo, setUser, setLoading]);\n\n  useEffect(() => {\n    let filteredTodos: Todo[] = [];\n\n    switch (status) {\n      case ACTIVE:\n        filteredTodos = todos.filter(item => !item.completed);\n        break;\n\n      case COMPLETED:\n        filteredTodos = todos.filter(item => item.completed);\n        break;\n\n      case ALL:\n      default:\n        filteredTodos = todos;\n        break;\n    }\n\n    setFilterTodos(filteredTodos\n      .filter(item => item.title.toUpperCase().trim()\n        .includes(searchField.toUpperCase().trim())));\n  }, [status, searchField, todos]);\n\n  const handleSelectButtonClick = (todoItem: Todo) => {\n    setSelectedTodo(todoItem.id);\n    setShowModal(true);\n    setTodo(todoItem);\n    setLoading(true);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {filterTodos.map(todoItem => {\n          const {\n            id,\n            title,\n            completed,\n          } = todoItem;\n\n          return (\n            <tr\n              key={id}\n              data-cy=\"todo\"\n              className={classNames({\n                'has-background-info-light': selectedTodo === id,\n              })}\n            >\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\">\n                {completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className={classNames({\n                  'has-text-success': completed,\n                  'has-text-danger': !completed,\n                })}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => handleSelectButtonClick(todoItem)}\n                >\n                  <span className=\"icon\">\n                    <i className={classNames('far',\n                      {\n                        'fa-eye': selectedTodo !== id,\n                        'fa-eye-slash': selectedTodo === id,\n                      })}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useContext } from 'react';\nimport { TodoContext } from '../../context';\n\nexport const TodoFilter: React.FC = () => {\n  const { setStatus, searchField, setSearchField } = useContext(TodoContext);\n\n  const handleStatusChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setStatus(event.target.value);\n  };\n\n  const handleSearchFieldChange = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setSearchField(event.target.value);\n  };\n\n  const handleClearSearchFieldClick = () => {\n    setSearchField('');\n  };\n\n  return (\n    <form className=\"field has-addons\" onSubmit={(e) => e.preventDefault()}>\n      <p className=\"control\">\n        <span className=\"select\">\n          <select data-cy=\"statusSelect\" onChange={handleStatusChange}>\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          onChange={handleSearchFieldChange}\n          value={searchField}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {searchField && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleClearSearchFieldClick}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n// import { TodoContext } from '../../context';\n\nexport const Loader: React.FC = () => {\n  // const { loading } = useContext(TodoContext);\n\n  return (\n    <div className=\"Loader\" data-cy=\"loader\">\n      <div className=\"Loader__content\" />\n    </div>\n  );\n};\n","import React, { useContext } from 'react';\nimport { Loader } from '../Loader';\nimport { TodoContext } from '../../context';\n\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\nexport const TodoModal: React.FC = () => {\n  const {\n    todo,\n    setTodo,\n    user,\n    setUser,\n    showModal,\n    setShowModal,\n    loading,\n  } = useContext(TodoContext);\n\n  const handleModalCloseClick = () => {\n    setShowModal(false);\n    setTodo({} as Todo);\n    setUser({} as User);\n  };\n\n  const {\n    id,\n    title,\n    completed,\n  } = todo;\n\n  const { name, email } = user;\n\n  return (\n    <>\n      {showModal && (\n        <div className=\"modal is-active\" data-cy=\"modal\">\n          <div className=\"modal-background\" />\n\n          {loading ? (\n            <Loader />\n          ) : (\n            <div className=\"modal-card\">\n              <header className=\"modal-card-head\">\n                <div\n                  className=\"modal-card-title has-text-weight-medium\"\n                  data-cy=\"modal-header\"\n                >\n                  {`Todo #${id}`}\n                </div>\n\n                {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n                <button\n                  type=\"button\"\n                  className=\"delete\"\n                  data-cy=\"modal-close\"\n                  onClick={handleModalCloseClick}\n                />\n              </header>\n\n              <div className=\"modal-card-body\">\n                <p className=\"block\" data-cy=\"modal-title\">\n                  {title}\n                </p>\n\n                <p className=\"block\" data-cy=\"modal-user\">\n                  {\n                    completed\n                      ? <strong className=\"has-text-success\">Done</strong>\n                      : <strong className=\"has-text-danger\">Planned</strong>\n                  }\n\n                  {' by '}\n\n                  <a href={`mailto:${email}`}>\n                    {name}\n                  </a>\n                </p>\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n    </>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useContext, useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { TodoContext } from './context';\nimport * as API from './api';\n\nexport const App: React.FC = () => {\n  const { setTodos } = useContext(TodoContext);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    API.getTodos()\n      .then(todoItem => {\n        setTodos(todoItem);\n        setIsLoading(false);\n      });\n  }, [setTodos]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {\n                isLoading\n                  ? <Loader />\n                  : <TodoList />\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <TodoModal />\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport { TodoProvider } from './context';\n\nReactDOM.render(\n  <TodoProvider>\n    <App />\n  </TodoProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}