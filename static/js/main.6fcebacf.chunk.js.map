{"version":3,"sources":["api.ts","context.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getUser","userId","TodoContext","React","createContext","TodoProvider","children","useState","todos","setTodos","loading","setLoading","showModal","setShowModal","todo","setTodo","user","setUser","status","setStatus","searchField","setSearchField","getTodosAPI","cb","a","todoItems","getUserAPI","API","userItem","value","Provider","TodoList","useContext","selectedTodo","setSelectedTodo","filterTodos","setFilterTodos","useEffect","Object","keys","length","filteredTodos","filter","item","completed","title","toUpperCase","trim","includes","className","map","todoItem","id","classNames","type","onClick","handleSelectButtonClick","TodoFilter","onSubmit","e","preventDefault","onChange","event","target","placeholder","style","pointerEvents","Loader","TodoModal","href","email","name","App","isLoading","setIsLoading","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6fcebacf.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useState } from 'react';\n\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\nimport * as API from './api';\n\ntype TodoContextTypes = {\n  getTodosAPI: (cb: () => {}) => {},\n  getUserAPI: (userId: number) => {},\n  todos: [],\n  setTodos: (todos: Todo[]) => {},\n  loading: false,\n  setLoading: (loading: boolean) => {},\n  showModal: false,\n  setShowModal: (showModal: boolean) => {},\n  todo: null,\n  setTodo: (todo: Todo | null) => {},\n  user: null,\n  setUser: (user: User | null) => {},\n  status: '',\n  setStatus: (status: string) => {},\n  searchField: '',\n  setSearchField: (searchField: string) => {},\n};\n\ntype TodoContextProps = {\n  getTodosAPI: (cb: () => {}) => void,\n  getUserAPI: (userId: number) => void,\n  todos: Todo[],\n  setTodos: (todos: Todo[]) => void,\n  loading: boolean,\n  setLoading: (loading: boolean) => void,\n  showModal: boolean,\n  setShowModal: (showModal: boolean) => void,\n  todo: Todo | null,\n  setTodo: (todo: Todo | null) => void,\n  user: User | null,\n  setUser: (user: User | null) => void,\n  status: string,\n  setStatus: (status: string) => void,\n  searchField: string,\n  setSearchField: (searchField: string) => void,\n};\n\nexport const TodoContext = React.createContext<TodoContextProps>(\n  {} as TodoContextTypes,\n);\n\ntype Props = {\n  children: React.ReactNode\n};\n\nexport const TodoProvider: React.FC<Props> = ({ children }) => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [showModal, setShowModal] = useState(false);\n  const [todo, setTodo] = useState<Todo | null>(null);\n  const [user, setUser] = useState<User | null>(null);\n  const [status, setStatus] = useState('');\n  const [searchField, setSearchField] = useState('');\n\n  const getTodosAPI = async (cb: () => {}) => {\n    const todoItems: Todo[] = await API.getTodos();\n\n    setTodos(todoItems);\n    cb();\n  };\n\n  const getUserAPI = async (userId: number) => {\n    const userItem: User = await API.getUser(userId);\n\n    setUser(userItem);\n    setLoading(false);\n  };\n\n  const value = {\n    getTodosAPI,\n    getUserAPI,\n    todos,\n    setTodos,\n    loading,\n    setLoading,\n    showModal,\n    setShowModal,\n    todo,\n    setTodo,\n    user,\n    setUser,\n    status,\n    setStatus,\n    searchField,\n    setSearchField,\n  };\n\n  return (\n    <TodoContext.Provider value={value}>\n      {children}\n    </TodoContext.Provider>\n  );\n};\n","import classNames from 'classnames';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { TodoContext } from '../../context';\nimport { Todo } from '../../types/Todo';\n\nconst ALL = 'all';\nconst ACTIVE = 'active';\nconst COMPLETED = 'completed';\n\nexport const TodoList: React.FC = () => {\n  const {\n    getUserAPI,\n    todos,\n    todo,\n    setTodo,\n    setShowModal,\n    setLoading,\n    status,\n    searchField,\n  } = useContext(TodoContext);\n\n  const [selectedTodo, setSelectedTodo] = useState(0);\n  const [filterTodos, setFilterTodos] = useState(todos);\n\n  useEffect(() => {\n    if (todo && Object.keys(todo).length) {\n      getUserAPI(todo.userId);\n    } else {\n      setSelectedTodo(0);\n    }\n  }, [todo, getUserAPI]);\n\n  useEffect(() => {\n    let filteredTodos: Todo[] = [];\n\n    if (todos.length > 0) {\n      switch (status) {\n        case ACTIVE:\n          filteredTodos = todos.filter(item => !item.completed);\n          break;\n\n        case COMPLETED:\n          filteredTodos = todos.filter(item => item.completed);\n          break;\n\n        case ALL:\n        default:\n          filteredTodos = todos;\n          break;\n      }\n\n      setFilterTodos(filteredTodos\n        .filter(item => item.title.toUpperCase().trim()\n          .includes(searchField.toUpperCase().trim())));\n    }\n  }, [status, searchField, todos]);\n\n  const handleSelectButtonClick = (todoItem: Todo) => {\n    setTodo(todoItem);\n    setSelectedTodo(todoItem.id);\n    setLoading(true);\n    setShowModal(true);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {filterTodos && filterTodos.map(todoItem => {\n          const {\n            id,\n            title,\n            completed,\n          } = todoItem;\n\n          return (\n            <tr\n              key={id}\n              data-cy=\"todo\"\n              className={classNames({\n                'has-background-info-light': selectedTodo === id,\n              })}\n            >\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\">\n                {completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className={classNames({\n                  'has-text-success': completed,\n                  'has-text-danger': !completed,\n                })}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => handleSelectButtonClick(todoItem)}\n                >\n                  <span className=\"icon\">\n                    <i className={classNames('far',\n                      {\n                        'fa-eye': selectedTodo !== id,\n                        'fa-eye-slash': selectedTodo === id,\n                      })}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useContext } from 'react';\nimport { TodoContext } from '../../context';\n\nexport const TodoFilter: React.FC = () => {\n  const { setStatus, searchField, setSearchField } = useContext(TodoContext);\n\n  return (\n    <form className=\"field has-addons\" onSubmit={(e) => e.preventDefault()}>\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => setStatus(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          onChange={(event) => setSearchField(event.target.value)}\n          value={searchField}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {searchField && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setSearchField('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => {\n  return (\n    <div className=\"Loader\" data-cy=\"loader\">\n      <div className=\"Loader__content\" />\n    </div>\n  );\n};\n","import React, { useContext } from 'react';\nimport { Loader } from '../Loader';\nimport { TodoContext } from '../../context';\n\nexport const TodoModal: React.FC = () => {\n  const {\n    todo,\n    setTodo,\n    user,\n    setUser,\n    showModal,\n    setShowModal,\n    loading,\n  } = useContext(TodoContext);\n\n  const handleModalCloseClick = () => {\n    setShowModal(false);\n    setTodo(null);\n    setUser(null);\n  };\n\n  return (\n    <>\n      {showModal && (\n        <div className=\"modal is-active\" data-cy=\"modal\">\n          <div className=\"modal-background\" />\n\n          {loading ? (\n            <Loader />\n          ) : (\n            <div className=\"modal-card\">\n              <header className=\"modal-card-head\">\n                <div\n                  className=\"modal-card-title has-text-weight-medium\"\n                  data-cy=\"modal-header\"\n                >\n                  {`Todo #${todo?.id}`}\n                </div>\n\n                {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n                <button\n                  type=\"button\"\n                  className=\"delete\"\n                  data-cy=\"modal-close\"\n                  onClick={handleModalCloseClick}\n                />\n              </header>\n\n              <div className=\"modal-card-body\">\n                <p className=\"block\" data-cy=\"modal-title\">\n                  {todo?.title}\n                </p>\n\n                <p className=\"block\" data-cy=\"modal-user\">\n                  {\n                    todo?.completed\n                      ? <strong className=\"has-text-success\">Done</strong>\n                      : <strong className=\"has-text-danger\">Planned</strong>\n                  }\n\n                  {' by '}\n\n                  <a href={`mailto:${user?.email}`}>\n                    {user?.name}\n                  </a>\n                </p>\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n    </>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useContext, useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { TodoContext } from './context';\n\nexport const App: React.FC = () => {\n  const { getTodosAPI } = useContext(TodoContext);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    getTodosAPI(async () => setIsLoading(false));\n  }, [getTodosAPI]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {\n                isLoading\n                  ? <Loader />\n                  : <TodoList />\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <TodoModal />\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport { TodoProvider } from './context';\n\nReactDOM.render(\n  <TodoProvider>\n    <App />\n  </TodoProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}